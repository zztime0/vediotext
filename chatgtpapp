(00:00) all right guys so I have some amazing amazing news for you guys today chat GPT API has been released and what this means is that you can leverage this technology in any of your apps very very easily and so in today's video I'm going to be showing you the API I'm going to be showing you how you can connect to this API I'm going to show you how you can build apps around this API and then I'm also going to be showing you a full working proof of concept app that leverages this API and builds a chat bot
(00:36) exactly like you see on the website now before we begin as always all the apps that I'm going to be showing you in today's video are going to be available to view and or clone for my patreon page which you're gonna see a link to in the description below alright so here we are on open ai's website and this is one of their blog articles and it says introducing chat GPT see and Whisper apis developers can now integrate chat GPT and Whisper models into their apps and products through our API and you can
(01:09) kind of read about it right and they have some case studies of different um apps and startups that are kind of using it but a couple of very very important points here are uh it's released it's called GPT 3.5 turbo okay so it's not gpt3 as was before and it's the same model used in the chat GPT product it's priced at .
(01:36) 002 cents uh 0.002 dollars per 1000 tokens so that's less than like a cent which is actually 10 times cheaper than our existing GPT 3.5 models okay so this is a big one it's very very cheap and it's amazingly cheap it's very very affordable and so they have a sample request and a sample response okay this is kind of how it looks and we're gonna talk talk about all that in just a second and there's also the whisper API which I'm going to cover in a separate video in the future this is also amazing news and so if you
(02:11) head over to one of their pages on their API site uh you're gonna see full instructions and full documentations on how you can use this functionality in your apps okay so the most important thing to understand here is you can also use this new model in place of the old one and so what this means is that you can use it um how you were using gpt3 even if you're not building like a chat bot of course if you're building a chat bot you know you want to be using this model but pretty much for all purposes
(02:43) when it comes to GPT open AI uh you want to be using this new model so here they have a sample request okay they have a mod you have to specify a model and you have to specify messages with different settings and the main difference with this request here is is that before you had to specify like temperature and all of these other parameters now you do not all the only thing you have to specify is the name of the model which is this model right here and the messages okay so if we scroll down uh you will see
(03:16) that you know you have a couple of messages that you need to specify and so you have the system message which is like you know you could say something you're a helpful assistant okay and this message is optional okay you can include it you can uh not include it you can include it as your first message here you can skip it okay I'm actually skipping it because I don't feel it's important for what I'm doing but the next ones are very very important these are these are the messages you need to
(03:43) understand and you need to include them correctly okay so we have roll user and this is you asking the bot a question and then the bot responds and then you may ask a follow-up question and so when you are sending requests you have to to keep track of the previous questions as well as the previous responses okay the system is not going to do it for you this is very very important to understand okay so you know you can send the system or you can skip it but this is going to be your first message here right you're going to ask who won the
(04:18) World Series in 2020 and then you get a response okay and the response is going to be a single message you know you're not going to get all of these things this is what you are essentially crafting to send okay so I'm gonna show you exactly how it works but um essentially this is the format of the messages obviously the initial message is going to be this and once you have a response if you want to send a follow-up question you're going to be sending all of this and so here's a couple of sample
(04:44) requests uh translate the following English text into French and there's some text and this is how uh the request the initial request would look like uh role system content right you can skip that if you want and this is your message okay or you can just have this one message okay so let me show you how a sample request looks like okay but before you can actually send this request you need to head over to API keys right I'm on platform.opened.
(05:13) com forward slash account forward slash API keys and you need to get your API key okay so I already have my keys I got my keys you need to get your own Keys obviously right and once you have that let me show you how a sample response looks like okay so here I'm using a basic um post uh get HTTP request client okay and so this is my request right here so these are the headers that I'm sending right I'm assending the authorization which is the bearer and the the key that I have plus I'm sending content to the application Json because we are sending
(05:48) a Json request okay so we have this headers here and then in the body I'm specifying the model and then I'm specifying the messages and obviously this messages it's gonna grow as you're gonna continue the conversation very very important to understand this is our initial message here right so as you can see this is a Json format and if you are seeing like a Json format or hearing about Json for the first time I urge you to learn more about it this is very very important and you're going to be using
(06:18) this all the time uh when you're building no code apps okay so this right here is essentially it's like a wrapper right it's an object these curly braces and if you have these um square brackets it wraps around an array so in this case messages is an array array of objects and this is an individual object with um you know a row field and a Content field so like two Fields okay and that's how it's going to look like it's going to be basically an array of objects as you are you know keeping track of all
(06:49) the messages that you send now if I execute this request I should get a response so this is my response and as you can see I'm getting a response the role is assistant and the content is Brasilia okay okay now let's say I want to ask a follow-up question well guess what I need to take this and I need to send another question okay and so if I want to send a follow-up question I need to end the response that I'm getting and I need to specify the roller system and then I need to ask the actual follow-up
(07:20) question okay so as you can see I'm asking how many people live there and I'm not specifying the country anymore because it understands the context now and so this is a nice test to make sure it understands that you know we were talking about Brazil initially right so I can send this second request and as you can see I'm getting a response as of 2021 the estimated population of Brazilia is approximately 3.
(07:43) 1 million people okay and so if I want to follow up guess what I need to copy this assistant here I need to create another response here another um another element inside of this messages array and I need to you know paste that okay I need to paste that right here and that that way it has context of population and then I can you know have another um another question I can just paste this and I can say um you know is the is the population growing or something like this you know you guys get get the picture right I have the initial response I have the
(08:17) initial request I have the response I have the second request I have the response and I have the third request so we're gonna send this and so we're gonna execute this request right here and there we see the response okay overall the population of Brasilia has been growing steadily etc etc so you can take that response put it back and then send another request and so that is how you send your responses okay and so now that you've seen how to do it let me go ahead and show you the proof of concept app that I
(08:47) built using flutter flow which is my favorite no code build and so here's the app and before I show you how I build this app let's go ahead and run it first so that you guys can see how it works we're gonna agree create a test environment real quick all right so here's the app and as you can see the app is built in the style of a typical messenger so something like WhatsApp iMessage or telegram uh in the sense that we have the title here and then we're gonna have our various chats so all you have to do is create a new chat
(09:18) by clicking this button here it creates a new chat and now you can interact with chat GPT using an API so let's say we ask the same question what is the capital of let's say we say Portugal we're gonna send that we see the message right here and we got a response the capital of Portugal is Lisbon and so now we can ask a follow-up question and we can ask it in the style that it understands the context so we can say what is the population and it tells us as of 2021 the estimated population of Portugal is around 10.3 million people
(09:52) and so as you can see you wouldn't have been able to answer that if it didn't know the context of what we were talking about right it needs to know population it needs to know that we're referring to Portugal and the reason that understands the context is because we are sending previous data and so we can keep talking to it we can say what is uh the second largest city okay and we're not talking about the name of the country we are just talking to it with the understanding that it knows the context
(10:18) okay we're gonna send there you go the second largest city in Portugal is Porto and then you can you know you can keep talking to it you know what is what is the third largest you know okay and there you have it and so as you can see it works really really nice and we can go back and we see the uh the chat and you know we can start a new conversation right we can just come here and say you know uh tell me something about I don't know Costa Rica okay there you have it okay A little little summary of Costa
(10:46) Rica and then we can keep talking to it and if you want you can come back and you can uh click on this and you're gonna be back inside that Portugal threat and you can continue this conversation so it supports uh multiple conversations stations and it also supports context because we are you know we keep sending the previous responses and the previous questions so nice app you can obviously improve it you can add a bunch of new features but it's an awesome starting point okay so now that you've seen the app let's go ahead and
(11:20) jump into flutter flow and I can kind of talk to you guys about how to build it correctly okay there's lots lots of things you guys need to understand so here we are back inside of the app and the first thing I want to show you is our uh database right we're using firestore DB to store things and we are using users right because we're doing authentication we don't want to show you know all the threads to everybody right they're going to be filtered by the users the user who owns it and then we
(11:47) have chats okay very very simple we have the timestamp of the last message we have the last message we have the user ID and the user who is actually talking right then we have the messages sub collection right this is the this is the so the sub collection that stores messages okay so we're storing all the messages as well as you know our messages as well as the messages we're getting back from chat GPT so we have the message and we have the timestamp and we have the user and in the case of us it's going to be the display user
(12:20) from uh from the firestore DB from the authentication in the case of chat GPT just going to be chat GPT I have this one but we don't really need that so we can delete this next I want to show you the pages uh that we're working with okay so we have the main chats page okay and so uh the things you have to know about this page are well we have this button here that creates a new chat it has two actions we're create we're doing a back-end call to our database and we're essentially creating a new chat
(12:48) and then we are redirecting to to the messages page uh with the chat ID okay so you know that's very very simple but you know very very standard can of behavior you create a new chat record and then you read the by passing the the reference uh to the chat document to the next page and we are also displaying our existing chats here okay so this is this chat list we have a backend query where we're doing chats list of documents and we're filtering them by our user record we're filtering them by the uid right so
(13:22) if I'm looking at this and I'm logged in as myself I'm just going to see my chats that are you know have to do with me right my own chat and I can also click on this and that's going to redirect to that specific chat so kind of something like this uh except we're not creating a new chat we are redirecting to the uh to an existing chat uh the next thing I want to show you is the chat messages okay so this is kind of the main um the main logic here right and so what's the What's Happening Here well
(13:51) what's happening is that we have first of all we have this General chat messages here and if you come over here uh what we're doing is we're just pulling a list of documents for messages and we need that because we need to pass that data to um to the uh the API call in order to you know collect all that data so we're basically pulling all the messages all the previous messages before you know this new message right all the old messages we're pulling it uh right from the top right like right from the
(14:22) beginning and here we have a list View and we're basically listing the messages but we're doing something um something interesting here we have a stack and we are displaying um we have a stack of rows and depending on if it's going to be my message or the Bots message we're gonna display it either on the right hand side or the left hand side so if it's my message we're going to display it on the right hand side if it's the button the Bots message we are going to display it on the left hand side this is kind of
(14:49) standard Behavior with you know pretty much all the messaging clients at least the ones I know right so we have row other which is um the the other message right you can't see it right now because it's behind this row but essentially as you can see it's a line left okay and you know we're basically displaying it here text right this is our message and then we have the you know the the relative time you know when was that message received and here we're actually doing conditional visibility user is not displayed and so
(15:21) it's not us essentially and then the same thing we're doing for this other one except this one is user is us next we have the chat button right here right this is a lot of things are happening here so if we open this up uh when you send the message okay when you send a message uh we need to create a new message a message document in that sub collection right and this is a chat wrap sub collection okay uh this is the message that we sent right so we immediately you know create a document for it and the next thing we need to do
(15:52) is we need to make a backend API call to uh chat GPT right let me show you the call so if we edit this API I call we have this one API called suppose request this is the URL and I got it from you know this main page right here this is that URL right here and we have the headers application Json and my um my token here my authorization token and then we also have the variables right so we have messages messages is a string that we're going to be passing these are previous messages the old messages okay and then we have the body and the body
(16:25) is simple we specified the model and we specified the messages and so if we do a response and test over here uh we can essentially send a sample messages and as you can see the messages is already formatted as a Json okay so that's that's what the format is expecting you see so here I have role user and content what's the capital of Brazil this is a sample test message and we can do a test API call and as you can see we're getting back a response and when you get a backer response you want to click on
(16:55) recommend it and you want to pick it right here okay you want to you want to select this one right here right the cop because you want to capture this response because we're going to need it uh you know to display it the user as well as you know to say for the uh subsequent responses okay so that's our API call that we have if we go back to the button right here uh once we execute that API call we are what we're doing here is we have a function and if we have previous messages we need to send those messages as well so this is what
(17:26) this custom function is doing it's called generate messages and if if we open that up this function takes two parameters okay it takes a list of document messages these are messages straight from the database okay as well as it takes this new message that we just sent okay because we need to divide it when you have the old messages in the database but we have a new message that we just sent okay and this is this input message and if I show you the function what this function is doing is that it accepts a list of messages which are
(17:57) directly passed from the database and then we have an uh the second argument new message and what I'm doing is I'm basically cycling through all the messages in the database and I'm creating uh a new array of objects remember because we need to pass an array of objects you see the name of the arrays messages but this is what we need to pass this uh this thing that I have highlighted here this is what I need to pass okay and so this is what this function is doing we have an empty list and then I'm cycling through the
(18:27) elements uh in the database and I'm adding it one by one and I'm checking is the user uh is that mess the user field in the message is a chat GPT then we need to set it as an assistant if it's not we're going to set it as a user and then I'm basically um specifying the message and then at the end once I uh included all the old messages I also include the new messages with the role of users so I'm saying once this is done I also add a new message role as user content is new message and then I need to do a Json and
(18:56) code because this is you know it's expecting a Json right if if you're doing anything related to apis it expects a Json request Json format so I'm doing Json and code and it nicely encodes it and the resulting message looks something like this let me show you it looks exactly like this right so if we come over here to our API call this is what the message looks like this is kind of what it looks like and you know obviously I can encode it myself but there's a function that does it's a lot easier it would have been a pain to
(19:25) do it myself but this is what the function uh this is what the function expects right because if we come over here you see this is a Json request this is Json form and so once we've once we've done that right so if we open this back up again we are checking if it succeeded or not so this is kind of for debugging but it's also important in the app if it's true we do a bunch of things if it's false we show a snag bar and we display the message now this is for my own debugging I just wanted to make sure
(19:53) that I'm not getting any errors uh in your production app you're basically going to do something like uh there was an error contact you know contact zone so you're not going to display the error message right um if it's successful and typically it's going to be successful because you know everything works here right we're gonna create a new message okay we're gonna we're gonna get a response and we're gonna create a new message now this is important before if you are creating multiple messages
(20:19) remember we created a message here and we created another message uh flutter flow required you they were not able to do it on the same collection looks like that has been fixed because before if you've seen my previous videos I actually created a fire Firebase function that essentially I was saving messages in another collection and then I was duplicating in the previous collection only if you've seen my previous videos if you have not do not worry about it but it makes your life a lot a lot easier so this is a really
(20:48) nice thing so I'm creating a new message I am doing a code expression on the um on the response right so here I have a response which is my you know this is the Json body I get back and I have this response that I configured in the API call and then I'm also doing a trim because um I need to trim because the response I'm getting it has like a bunch of spaces and a bunch of things I just want the string I just want that word the response so that is why I have a code expression and then I'm also specifying
(21:18) the current sign as well as the user I'm just setting it to chat GPT and that way we can just um you know display it over there right just chat GPT and I'm also updating the a couple of things on the main chat collection right because that is the the the stuff that's displayed on the main page right and so things like last message as well as the timestamp I'm also updating that uh because you know we have a new message that when we need to update the um the parent uh chat collection and then last but not least
(21:51) I'm clearing this input field and that's pretty much it and as a result you have a basic chat client you have a client that you can communicate you have multiple chat chats that you can have just exactly like the case with the the web client right the client that we are all familiar with and obviously you can take it further you can do amazing things with it uh with this app but you know beyond that you can obviously um you know you can include it inside an app that you're building so you don't
(22:23) have to build this client right this Standalone app in other words you can include this functionality in pretty much any app right so this you know I'm using notion a lot and notion has you know has an AI client that uses uh GPT right and so they're embedding the functionality inside and so millions millions and millions of things that you can do with it uh now that we have an official API before we didn't now we have an official API and you can build all kinds of amazing apps using uh this functionality all right and so if you're
(22:55) you know watching this video and you're thinking to yourself this is awesome I want to make maybe build a standalone Standalone chat GPT client maybe a messenger maybe some kind of a a bot a chat bot or some kind of a customer service bot or you name it where I wanna you know leverage this and embed this functionality into another app I'm building maybe a different app that I'm building then uh you definitely want to you know View and or clone the app that I'm building and you can do that by
(23:27) joining my patreon community when you do join not only will you get access to this app not only will you be able to view and or clone this app but you will also be able to view and or clone all my other apps that I built on this channel and not only that but you'll get access to extra content such as q and A's live streams behind the scenes content as well as my supporter exclusive patreon exclusive masterclass Series where we do deep Dives on specific topics that the community votes on so you're going to
(24:03) get a ton of extra content and above all you're going to be supporting this Channel and supporting my work so if you are in on watching this and you're thinking to yourself I want to play around with this I want to kind of you know do a couple of things with it I want to see how it works I want to change some things you definitely want to check out my patreon community we got an amazing community and consider becoming a member now if you enjoyed this video and you want to see other videos that talk about you know AI stuff
(24:31) and kind of building this uh chat GPT gpt3 apps then you want to definitely check out the video that you're seeing on the screen right now that is an awesome video that's going to help you to better grasp how to build apps that leverage this amazing AI functionality
